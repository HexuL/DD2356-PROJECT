import numpy as np
import matplotlib.pyplot as plt
from matplotlib.animation import FuncAnimation
import os

## @file
#  This script animates data from multiple text files to simulate a process over time.
#  The files should be generated by the 'seq.c' C program, which should have its data-saving feature enabled.
#  Before running this script, ensure that 'seq.c' is configured to save all intermediate data.

## Path to the directory containing data files.
folder_path = "./outputdata"

## Get all text files in the directory, assuming they end with '.txt'.
#  Files are sorted to ensure they are displayed in sequence.
files = [os.path.join(folder_path, file) for file in os.listdir(folder_path) if file.endswith(".txt")]
files.sort()  # Sort the files to ensure they are displayed in order
print("show ", len(files), "data")

## Function to update the image data in the animation.
#  @param file The path to the data file to load.
#  @return Returns the updated image object.
def update_data(file):
    # Load data from file
    data = np.loadtxt(file)

    # Update the image data
    im.set_array(data)

    # Update the title with the filename
    plt.title(os.path.basename(file))

    return im,

## Create an initial image to update in the animation.
fig, ax = plt.subplots()
im = ax.imshow(np.zeros((10, 10)), cmap='bwr', origin='lower')
plt.colorbar(im)

## Create the animation using matplotlib's FuncAnimation.
#  @var ani The animation object.
#  Interval between frames is 50 milliseconds, and blit=True for more efficient redrawing.
ani = FuncAnimation(fig, update_data, frames=files, blit=True, interval=50)

## Display the animation.
plt.show()
